package pl.pcz.wimii.zpi.smartplan.entities;
// Generated 2015-12-07 21:04:58 by Hibernate Tools 4.3.1

import java.util.Date;
import java.util.HashSet;
import java.util.Objects;
import java.util.Set;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Plany generated by hbm2java
 */
@Entity
@Table(name = "plany", catalog = "smartplan_db"
)
public class Plany implements java.io.Serializable, Comparable<Plany> {

    private Integer id;
    private RokKierunek rokKierunek;
    private String planNazw;
    private Date dataPublikacji;
    private Date dataDodania;
    private int widoczny;
    private Set<Zajecia> zajecias = new HashSet<>(0);
    private Set<Przedmioty> przedmioties = new HashSet<>(0);

    public Plany() {
    }

    public Plany(int widoczny) {
        this.widoczny = widoczny;
    }

    public Plany( String planNazw, Date dataPublikacji, Date dataDodania, int widoczny) {
        this.planNazw = planNazw;
        this.dataPublikacji = dataPublikacji;
        this.dataDodania = dataDodania;
        this.widoczny = widoczny;
    }

    @Id
    @GeneratedValue(strategy = IDENTITY)

    @Column(name = "id", unique = true, nullable = false)
    public Integer getId() {
        return this.id;
    }

    public void setId(Integer id) {
        this.id = id;
    }

    @Column(name = "plan_nazw", length = 45)
    public String getPlanNazw() {
        return this.planNazw;
    }

    public void setPlanNazw(String planNazw) {
        this.planNazw = planNazw;
    }

    @Temporal(TemporalType.DATE)
    @Column(name = "data_publikacji", length = 10)
    public Date getDataPublikacji() {
        return this.dataPublikacji;
    }

    public void setDataPublikacji(Date dataPublikacji) {
        this.dataPublikacji = dataPublikacji;
    }

    @Temporal(TemporalType.DATE)
    @Column(name = "data_dodania", length = 10)
    public Date getDataDodania() {
        return this.dataDodania;
    }

    public void setDataDodania(Date dataDodania) {
        this.dataDodania = dataDodania;
    }

    @Column(name = "widoczny", nullable = false)
    public int getWidoczny() {
        return this.widoczny;
    }

    public void setWidoczny(int widoczny) {
        this.widoczny = widoczny;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "plany")
    public Set<Zajecia> getZajecias() {
        return this.zajecias;
    }

    public void setZajecias(Set<Zajecia> zajecias) {
        this.zajecias = zajecias;
    }
    @OneToMany(fetch = FetchType.LAZY, cascade = CascadeType.ALL, mappedBy = "plan")
    public Set<Przedmioty> getPrzedmioties() {
        return przedmioties;
    }

    public void setPrzedmioties(Set<Przedmioty> przedmioties) {
        this.przedmioties = przedmioties;
    }

    @Override
    public int compareTo(Plany o) {
        return this.dataDodania.compareTo(o.dataDodania);
    }

    @Override
    public int hashCode() {
        int hash = 3;
        hash = 13 * hash + Objects.hashCode(this.rokKierunek);
        hash = 13 * hash + Objects.hashCode(this.planNazw);
        hash = 13 * hash + Objects.hashCode(this.dataPublikacji);
        hash = 13 * hash + Objects.hashCode(this.dataDodania);
        hash = 13 * hash + this.widoczny;
        return hash;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj) {
            return true;
        }
        if (obj == null) {
            return false;
        }
        if (getClass() != obj.getClass()) {
            return false;
        }
        final Plany other = (Plany) obj;
        if (this.widoczny != other.widoczny) {
            return false;
        }
        if (!Objects.equals(this.planNazw, other.planNazw)) {
            return false;
        }
        if (!Objects.equals(this.rokKierunek, other.rokKierunek)) {
            return false;
        }
        if (!Objects.equals(this.dataPublikacji, other.dataPublikacji)) {
            return false;
        }
        if (!Objects.equals(this.dataDodania, other.dataDodania)) {
            return false;
        }
        return true;
    }



}
